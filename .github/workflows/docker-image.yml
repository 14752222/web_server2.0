name: Push to Server and Build Docker Compose

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest # 这是 GitHub Actions 的服务器环境 eg: CentOS, Ubuntu, Windows Server, macOS
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.1

      - name: Generate new version
        run: |
          sh ./config/version.sh   # 执行config/version.sh 脚本 #!/bin/bash
          version=$(grep "version =" ./config/config.ini | awk -F= '{print $2}' | tr -d ' ')
          echo VERSION=$version >> $GITHUB_ENV

      - name: Set up Git
        run: |
          git config user.email "1364952827@qq.com"
          git config user.name "ZZL"
          git status

      - name: swag init
        run: |
          export GO111MODULE=on
          export GOPROXY=https://goproxy.cn,direct
          go install github.com/swaggo/swag/cmd/swag@latest  # go get -u github.com/swaggo/swag/cmd/swag 
          swag init

      #      - name: Pull and merge remote changes
      #        run: |
      #          git pull origin feature/$VERSION    #
      #
      #      - name: git push tag to remote
      #        run: |
      #          git tag $VERSION
      #          git checkout -b feature/$VERSION # 创建新分支
      #          git add .
      #          git commit -m "Swagger documentation and tag:$VERSION"
      #          git push origin feature/$VERSION  # 推送新分支
      - name: create git branch
        run: |
          git checkout -b feature/$VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.ALL_TOKEN }}

      - name: git add
        run: |
          git add .
          git commit -m "Swagger documentation and tag:$VERSION"
          git push origin feature/$VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.ALL_TOKEN }}

      - name: git genrate tag
        run: |
          git tag $VERSION
          git push origin $VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.ALL_TOKEN }}

      - name: Build and Run Docker Compose
        uses: appleboy/ssh-action@master # 这是一个自定义的 Action，用于在服务器上执行命令
        with:
          host: ${{ secrets.SERVER_HOST }} # 这是你的服务器地址
          username: ${{ secrets.SERVER_USERNAME }} # 这是你的服务器用户名
          password: ${{ secrets.SERVER_PASSWORD }} # 这是你的服务器密码
          script: |
            cd /code/web_server2.0 # 这是你的项目路径
             git fetch origin $VERSION # 拉取远程分支
            docker-compose stop app nginx  
            nohup docker-compose up --no-deps app nginx > /dev/null 2>&1 &
            
          
